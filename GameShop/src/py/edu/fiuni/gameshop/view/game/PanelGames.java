/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package py.edu.fiuni.gameshop.view.game;

;


import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import javax.swing.table.DefaultTableModel;
import py.edu.fiuni.gameshop.controller.game.GamePanelController;

import py.edu.fiuni.gameshop.dao.mysql.DAOConnection;
import py.edu.fiuni.gameshop.dao.mysql.MySQLGameDAO;
import py.edu.fiuni.gameshop.view.tools.ViewController;

/*
 *UNIVERSIDAD NACIONAL DE ITAPUA
 *PROJECT GAMESHOP
 *
 * 2020 - SEGUNDO SEMESTRE
 *
 *  Jorge Tyrakowski & Pamela Horn
 */

/**
 * Class containing the video game panel
 */
public class PanelGames extends javax.swing.JPanel {

    MySQLGameDAO dao;
    DAOConnection connection;
    GamePanelController controller;
    String selectedGame = "";

    /**
     * Constructor where the necessary for the use of the panel is initialized.
     */
    public PanelGames() {
        initComponents();
        this.connection = new DAOConnection();
        this.dao = new MySQLGameDAO(connection);
        this.controller = new GamePanelController(this, dao);
        consultTable();

    }
    
    /**
     * Method in charge of updating the table by consulting the information in the database.
     */
     private void consultTable() {
        try {
            DefaultTableModel model = new DefaultTableModel();
            this.tblGamesTable.setModel(model);

            Connection con = this.connection.getConexion();
            PreparedStatement ps = null;
            ResultSet rs = null;

            String SELECT = "SELECT name, console, price, availability FROM games";
            ps = con.prepareStatement(SELECT);
            rs = ps.executeQuery();

            ResultSetMetaData rsMd = rs.getMetaData();
            int columnsCant = rsMd.getColumnCount();

            model.addColumn("GAME");
            model.addColumn("CONSOLE");
            model.addColumn("PRICE");
            model.addColumn("STATE");

            while (rs.next()) {

                Object[] rows = new Object[columnsCant];

                for (int i = 0; i < columnsCant; i++) {
                    if (i == 3) {     
                        if(rs.getBoolean(i + 1)){
                            rows[i] = "Available";
                        } else {
                            rows[i] = "Non available";
                        }
                    } else {
                        rows[i] = rs.getObject(i + 1);
                    }
                }

                model.addRow(rows);

            }

        } catch (SQLException e) {
            System.out.println(e);
        }
    }

     /**
      * Method in charge of searching for a game by name and updating the table.
      */
    private void consultGamesByName() {
        try {
            DefaultTableModel model = new DefaultTableModel();
            this.tblGamesTable.setModel(model);

            Connection con = this.connection.getConexion();
            PreparedStatement ps = null;
            ResultSet rs = null;

            String SELECT = "SELECT name, console, price, availability FROM games WHERE name = ?";
            ps = con.prepareStatement(SELECT);
            ps.setString(1, jtextSearch.getText());
            rs = ps.executeQuery();

            ResultSetMetaData rsMd = rs.getMetaData();
            int columnsCant = rsMd.getColumnCount();

            model.addColumn("GAME");
            model.addColumn("CONSOLE");
            model.addColumn("PRICE");
            model.addColumn("STATE");

            while (rs.next()) {

                Object[] rows = new Object[columnsCant];

                for (int i = 0; i < columnsCant; i++) {
                    rows[i] = rs.getObject(i + 1);
                }

                model.addRow(rows);

            }

        } catch (SQLException e) {
            System.out.println(e);
        }
    }

    /**
     * Update the game table.
     */
    public void update() {
        consultTable();
    }

    /**
     * Refresh the text field
     */
    public void updateSearch() {
        if (jtextSearch.getText().trim().isEmpty()) {
            update();
        } else {
            consultGamesByName();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        pnlPrincipal = new javax.swing.JPanel();
        jpnlMenu = new javax.swing.JPanel();
        pnlUp = new javax.swing.JPanel();
        bttBack = new javax.swing.JButton();
        jtextSearch = new javax.swing.JTextField();
        jbttSearchByName = new javax.swing.JButton();
        pnlDown = new javax.swing.JPanel();
        jbttAddGame = new javax.swing.JButton();
        jbttDeleteGame = new javax.swing.JButton();
        jbttModify = new javax.swing.JButton();
        jbttSeeMore = new javax.swing.JButton();
        spnlTable = new javax.swing.JScrollPane();
        tblGamesTable = new javax.swing.JTable();
        jlblBackground = new javax.swing.JLabel();

        jList1.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(jList1);

        setPreferredSize(new java.awt.Dimension(1280, 800));
        setLayout(new java.awt.BorderLayout());

        pnlPrincipal.setLayout(null);

        jpnlMenu.setOpaque(false);
        jpnlMenu.setLayout(new java.awt.BorderLayout());

        pnlUp.setBackground(new java.awt.Color(60, 17, 17));
        pnlUp.setForeground(new java.awt.Color(102, 102, 255));

        bttBack.setBackground(new java.awt.Color(255, 255, 255));
        bttBack.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        bttBack.setIcon(new javax.swing.ImageIcon(getClass().getResource("/py/edu/fiuni/gameshop/view/icons/mini-icons/return.png"))); // NOI18N
        bttBack.setContentAreaFilled(false);
        bttBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttBackActionPerformed(evt);
            }
        });

        jbttSearchByName.setBackground(new java.awt.Color(255, 255, 255));
        jbttSearchByName.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jbttSearchByName.setText("SEARCH BY NAME");
        jbttSearchByName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbttSearchByNameActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlUpLayout = new javax.swing.GroupLayout(pnlUp);
        pnlUp.setLayout(pnlUpLayout);
        pnlUpLayout.setHorizontalGroup(
            pnlUpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlUpLayout.createSequentialGroup()
                .addComponent(bttBack)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 502, Short.MAX_VALUE)
                .addComponent(jbttSearchByName, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jtextSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5))
        );
        pnlUpLayout.setVerticalGroup(
            pnlUpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlUpLayout.createSequentialGroup()
                .addComponent(bttBack, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 40, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlUpLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnlUpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jbttSearchByName, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtextSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23))
        );

        jpnlMenu.add(pnlUp, java.awt.BorderLayout.PAGE_START);

        pnlDown.setBackground(new java.awt.Color(60, 17, 17));

        jbttAddGame.setBackground(java.awt.SystemColor.window);
        jbttAddGame.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jbttAddGame.setText("ADD A GAME");
        jbttAddGame.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbttAddGameActionPerformed(evt);
            }
        });

        jbttDeleteGame.setBackground(new java.awt.Color(255, 255, 255));
        jbttDeleteGame.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jbttDeleteGame.setText("DELETE GAME");

        jbttModify.setBackground(new java.awt.Color(255, 255, 255));
        jbttModify.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jbttModify.setText("MODIFY GAME");

        jbttSeeMore.setBackground(new java.awt.Color(255, 255, 255));
        jbttSeeMore.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jbttSeeMore.setText("SEE MORE");

        javax.swing.GroupLayout pnlDownLayout = new javax.swing.GroupLayout(pnlDown);
        pnlDown.setLayout(pnlDownLayout);
        pnlDownLayout.setHorizontalGroup(
            pnlDownLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlDownLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jbttSeeMore)
                .addGap(18, 18, 18)
                .addComponent(jbttDeleteGame)
                .addGap(18, 18, 18)
                .addComponent(jbttModify)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 403, Short.MAX_VALUE)
                .addComponent(jbttAddGame)
                .addGap(34, 34, 34))
        );
        pnlDownLayout.setVerticalGroup(
            pnlDownLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDownLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(pnlDownLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pnlDownLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jbttDeleteGame)
                        .addComponent(jbttModify)
                        .addComponent(jbttSeeMore))
                    .addComponent(jbttAddGame))
                .addContainerGap(45, Short.MAX_VALUE))
        );

        jpnlMenu.add(pnlDown, java.awt.BorderLayout.PAGE_END);

        spnlTable.setBackground(new java.awt.Color(0, 0, 0));
        spnlTable.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        spnlTable.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
        spnlTable.setViewportBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.black, java.awt.Color.black, java.awt.Color.black, java.awt.Color.black));
        spnlTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                spnlTableMouseClicked(evt);
            }
        });

        tblGamesTable.setBorder(javax.swing.BorderFactory.createCompoundBorder());
        tblGamesTable.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        tblGamesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "GAME", "CONSOLE", "PRICE", "STATE"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblGamesTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        tblGamesTable.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        tblGamesTable.setGridColor(new java.awt.Color(0, 0, 0));
        tblGamesTable.setRowHeight(20);
        tblGamesTable.setSelectionBackground(new java.awt.Color(60, 17, 17));
        tblGamesTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblGamesTableMouseClicked(evt);
            }
        });
        spnlTable.setViewportView(tblGamesTable);

        jpnlMenu.add(spnlTable, java.awt.BorderLayout.CENTER);

        pnlPrincipal.add(jpnlMenu);
        jpnlMenu.setBounds(100, 90, 1080, 620);

        jlblBackground.setIcon(new javax.swing.ImageIcon(getClass().getResource("/py/edu/fiuni/gameshop/view/icons/icon3.jpg"))); // NOI18N
        jlblBackground.setText("jLabel1");
        jlblBackground.setPreferredSize(new java.awt.Dimension(1280, 800));
        pnlPrincipal.add(jlblBackground);
        jlblBackground.setBounds(0, 0, 1280, 800);

        add(pnlPrincipal, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void bttBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttBackActionPerformed
        ViewController.backToMenu(this);
    }//GEN-LAST:event_bttBackActionPerformed

    private void jbttAddGameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbttAddGameActionPerformed

    }//GEN-LAST:event_jbttAddGameActionPerformed

    private void spnlTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_spnlTableMouseClicked

    }//GEN-LAST:event_spnlTableMouseClicked

    /**
     * This method is in charge of saving the information of the selected row
     */
    private void tblGamesTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblGamesTableMouseClicked
        int row = this.tblGamesTable.rowAtPoint(evt.getPoint());
        this.selectedGame = String.valueOf(this.tblGamesTable.getValueAt(row, 0));
    }//GEN-LAST:event_tblGamesTableMouseClicked

    private void jbttSearchByNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbttSearchByNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jbttSearchByNameActionPerformed

    public String getSelectedGame() {
        return this.selectedGame;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bttBack;
    private javax.swing.JList<String> jList1;
    private javax.swing.JScrollPane jScrollPane1;
    public javax.swing.JButton jbttAddGame;
    public javax.swing.JButton jbttDeleteGame;
    public javax.swing.JButton jbttModify;
    public javax.swing.JButton jbttSearchByName;
    public javax.swing.JButton jbttSeeMore;
    private javax.swing.JLabel jlblBackground;
    private javax.swing.JPanel jpnlMenu;
    private javax.swing.JTextField jtextSearch;
    private javax.swing.JPanel pnlDown;
    private javax.swing.JPanel pnlPrincipal;
    private javax.swing.JPanel pnlUp;
    private javax.swing.JScrollPane spnlTable;
    private javax.swing.JTable tblGamesTable;
    // End of variables declaration//GEN-END:variables
}
